The process to move WordPress into its own directory is as follows:

   1. Create the new location for the core WordPress files to be stored (we will use /dev in our examples). (On linux, use mkdir dev from your www directory. You'll probably want to use "chown apache:apache" on the dev directory you created.)
   2. Go to the General panel.
   3. In the box for WordPress address (URL): change the address to the root directory's URL.
   		 Example: http://example.com     
   4. In the box for Site address (URL): change the address to the root directory's URL. 
   		 Example: http://example.com
   5. Click Save Changes. (Do not worry about the error message and do not try to see your blog at this point! You will probably get a message about file not found.)
   6. Move your WordPress core files to the new location (dev directory).
   7. Copy (NOT MOVE!) the index.php and .htaccess files from the dev directory into the root directory of your site (Blog address). The .htaccess file is invisible, so you may have to set your FTP client to show hidden files. If you are not using pretty permalinks, then you may not have a .htaccess file. If you are running WordPress on a Windows (IIS) server and are using pretty permalinks, you'll have a web.config rather than a .htaccess file in your dev directory. As stated above, copy (don't move) the index.php file to your root directory, but MOVE (DON'T COPY) the web.config file to your root directory.
   8. Open your root directory's index.php file in a text editor
   9. Change the following and save the file. Change the line that says:
      require('./wp-blog-header.php');
      to the following, using your directory name for the WordPress core files:
      require('./dev/wp-blog-header.php');
  10. Open your root directory's .htaccess file in a text editor and replace the <IfModule mod_rewrite.c> section completely with the below code
  		
  		<IfModule mod_rewrite.c>
		RewriteEngine On
		RewriteCond %{REQUEST_FILENAME} !-f
		RewriteCond %{REQUEST_FILENAME} !-d [OR]
		RewriteCond %{REQUEST_URI} ^/$
		#Rewrite all query strings to /dev directory
		RewriteRule ^(.*)$ /dev/$1 [L,QSA]
		</IfModule>

		Example: 
		Old .htaccess:
		
		# BEGIN WordPress
		<IfModule mod_rewrite.c>
		RewriteEngine On
		RewriteBase /dev/
		RewriteRule ^index\.php$ - [L]
		RewriteCond %{REQUEST_FILENAME} !-f
		RewriteCond %{REQUEST_FILENAME} !-d
		RewriteRule . /dev/index.php [L]
		</IfModule>
		
		# END WordPress 
		
		New .htaccess:
		
		# BEGIN WordPress
		<IfModule mod_rewrite.c>
		RewriteEngine On
		RewriteCond %{REQUEST_FILENAME} !-f
		RewriteCond %{REQUEST_FILENAME} !-d [OR]
		RewriteCond %{REQUEST_URI} ^/$
		RewriteRule ^(.*)$ /dev/$1 [L,QSA]
		</IfModule>
		
		# END WordPress 
		
		Important:		
		The above .htaccess file change is required only for the .htaccess file under root directory.
		
		
  11. Login to the new location. It might now be http://example.com/wp-admin/
  12. If you have set up Permalinks, go to the Permalinks panel and update your Permalink structure. WordPress will automatically update your .htaccess file if it has the appropriate file permissions. If WordPress can't write to your .htaccess file, it will display the new rewrite rules to you, which you should manually copy into your .htaccess file (in the same directory as the main index.php file.) 
  13. Change all the urls in Misc. Settings -> General Settings and Payment Settings Tab corresponding to the new url stated in step 4.  
  	  Change the site urls if using externally in payment merchant accounts. 	